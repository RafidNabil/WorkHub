@model WorkHub.Models.CreateaProject

@{
    ViewBag.Title = "Create Project";
    Layout = "~/Views/Manager/Managerindex.cshtml";

    var users = ViewBag.Users as List<WorkHub.Models.UserSignUp> ?? new List<WorkHub.Models.UserSignUp>();
}

<!-- Include Font Awesome -->
<link href="~/Content/fontawesome-all.min.css" rel="stylesheet" type="text/css" />

<h2>Create Project</h2>
<p>Fill in the details below to create a new project.</p>

@using (Html.BeginForm("CreateProject", "Manager", FormMethod.Post, new { @class = "needs-validation", novalidate = "novalidate" }))
{
    <div class="card">
        <div class="card-header">
            <h5 class="card-title">Project Details</h5>
        </div>
        <div class="card-body">
            <div class="mb-3">
                @Html.LabelFor(m => m.ProjectName, new { @class = "form-label" })
                @Html.TextBoxFor(m => m.ProjectName, new { @class = "form-control", placeholder = "Enter project name", required = "required" })
                <div class="invalid-feedback">
                    Please enter a project name.
                </div>
            </div>
            <div class="mb-3">
                @Html.LabelFor(m => m.Description, new { @class = "form-label" })
                @Html.TextAreaFor(m => m.Description, new { @class = "form-control", placeholder = "Enter project description", rows = "4", required = "required" })
                <div class="invalid-feedback">
                    Please enter a project description.
                </div>
            </div>
            <div class="mb-3 row">
                <div class="col-md-6">
                    @Html.LabelFor(m => m.StartDate, new { @class = "form-label" })
                    @Html.TextBoxFor(m => m.StartDate, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date", required = "required" })
                    <div class="invalid-feedback">
                        Please enter a valid start date.
                    </div>
                </div>
                <div class="col-md-6">
                    @Html.LabelFor(m => m.EndDate, new { @class = "form-label" })
                    @Html.TextBoxFor(m => m.EndDate, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date", required = "required" })
                    <div class="invalid-feedback">
                        Please enter a valid end date.
                    </div>
                </div>
            </div>
            <div class="mb-3">
                @Html.LabelFor(m => m.TeamMembers, new { @class = "form-label" })
                @Html.ListBoxFor(m => m.TeamMembers, new MultiSelectList(users, "Id", "Username"), new { @class = "form-control", multiple = "multiple" })
            </div>
        </div>
        <div class="card-footer">
            <button type="submit" class="btn btn-primary">
                <i class="fas fa-save"></i> Save Project
            </button>
            <a href="@Url.Action("ManagerIndex", "Manager")" class="btn btn-secondary">
                <i class="fas fa-arrow-left"></i> Back to Dashboard
            </a>
        </div>
    </div>
}

<!-- Include Bootstrap and jQuery scripts if not already included in the layout -->
<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<script src="~/Scripts/bootstrap.min.js"></script>

<!-- Custom validation script -->
<script>
    (function () {
        'use strict';
        window.addEventListener('load', function () {
            var forms = document.getElementsByClassName('needs-validation');
            var validation = Array.prototype.filter.call(forms, function (form) {
                form.addEventListener('submit', function (event) {
                    if (form.checkValidity() === false) {
                        event.preventDefault();
                        event.stopPropagation();
                    }
                    form.classList.add('was-validated');
                }, false);
            });
        }, false);
    })();
</script>
